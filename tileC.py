import pygame, text_to_screen

class Tile(pygame.Rect):

    List = []
    width, height = 32, 32
    total_tiles = 1
    H, V = 1, 40 

    invalids = [129, 329, 290, 378, 418, 458, 497, 498, 368,
                408, 448, 488, 528, 568, 569, 529, 489, 490,
                491, 492, 493, 494, 495, 496, 537, 536, 535,
                534, 533, 532, 531, 530, 574, 575, 576, 573,
                694, 695, 696, 697, 698, 734, 735, 736, 737,
                815, 816, 817, 818, 814, 813, 773, 772, 771,
                770, 810, 811, 812, 809, 768, 808, 848, 849,
                661, 701, 741, 781, 821, 861, 862, 822, 782,
                742, 744, 743, 745, 746, 747, 748, 749, 750,
                751, 752, 753, 754, 755, 756, 717, 757, 677,
                637, 597, 557, 517, 584, 585, 586, 587, 588,
                589, 590, 591, 592, 593, 624, 625, 626, 627,
                628, 629, 630, 631, 632, 633, 462, 463, 464,
                465, 466, 467, 468, 469, 429, 428, 427, 426,
                425, 424, 423, 422, 382, 342, 302, 263, 224,
                222, 225, 266, 226, 267, 307, 308, 267, 347,
                348, 388, 387, 386, 270, 230, 310, 350, 390,
                391, 392, 352, 312, 272, 232, 192, 191, 151,
                111, 71, 31, 30, 30, 29, 28, 27, 26, 25, 65,
                64, 24, 23, 63, 103, 102, 62, 22, 231, 271, 311,
                351, 152, 153, 154, 155, 115, 116, 117, 118, 158,
                198, 199, 159, 119, 120, 160, 114, 113, 112, 72,
                73, 75, 74, 32, 33, 34, 36, 37, 35, 38, 39, 40,
                80, 79, 78, 77, 76, 200, 240, 280, 320, 360, 400,
                440, 480, 520, 560, 600, 640, 680, 720, 760, 800,
                840, 880, 920, 960, 1000, 1040, 1080, 1120, 1160,
                1200, 1199, 1197, 1198, 1196, 1194, 1195, 1192,
                1193, 1074, 1075, 959, 919, 291, 292, 293, 294,
                295, 336, 296, 177, 137, 98, 169, 165, 125, 124,
                84, 44, 4, 1, 2, 3, 43, 42, 41, 81, 82, 83, 121,
                122, 161, 201, 241, 241, 281, 321, 322, 361, 362,
                402, 401, 441, 481, 521, 561, 562, 602, 601, 641,
                681, 721, 761, 801, 841, 881, 921, 961, 1001, 1041,
                1081, 1121, 1161, 1162, 1163, 1164, 1124, 1084,
                1044, 1004, 964, 963, 962, 1042, 1002, 1003, 1043,
                1083, 1082, 1122, 1123, 1165, 1166, 1167, 1168,
                1169, 1170, 1171, 1172, 1174, 1174, 1173, 1176,
                1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
                1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
                1188, 5, 6, 45, 46, 47, 48, 49, 7, 8, 9, 10, 11,
                12, 13, 14, 193, 194, 684, 685, 725, 765, 805, 845,
                885, 884, 844, 804, 764, 724, 688, 689, 969, 969,
                1007, 1007, 1008, 968, 1009, 1010, 1011, 1012, 1013,
                1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
                1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
                1032, 1033, 1072, 1073, 993, 992, 991, 990, 988, 989,
                987, 986, 985, 984, 983, 982, 981, 980, 979, 978, 977,
                976, 975, 974, 974, 973, 972, 971, 970, 327, 15, 16,
                17, 18, 19, 20, 21]

    @staticmethod
    def pre_init(screen):
        for y in range(0, screen.get_height(), 32):
            for x in range(0, screen.get_width(), 32):
                if Tile.total_tiles in Tile.invalids:
                    Tile(x, y, 'solid')
                else:
                    Tile(x, y, 'empty')

            
    def __init__(self, x, y, Type):

        self.parent = None
        self.H, self.G, self.F = 0,0,0
        self.type = Type
        self.number = Tile.total_tiles
        Tile.total_tiles += 1

        if Type == 'empty':
            self.walkable = True
        else:
            self.walkable = False

        pygame.Rect.__init__(self, (x, y) , (Tile.width, Tile.height) )
        Tile.List.append(self)

    @staticmethod
    def get_tile(number):
        for tile in Tile.List:
            if tile.number == number:
                return tile


